buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://geonet.artifactoryonline.com/geonet/public-releases'
        }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.6'
        classpath 'nz.org.geonet:gradle-build-version-plugin:1.0.4'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'build-version'

buildVersion {
    releaseTagPattern = "^v(\\d+\\.\\d+\\.\\d+)"
}

sourceCompatibility = 1.7
targetCompatibility = 1.7
group = 'net.serenity-bdd'
version = buildVersion.version

repositories {
    mavenLocal()
    jcenter()
}

ext {
    bintrayBaseUrl = 'https://api.bintray.com/maven'
    bintrayRepository = 'maven'
    bintrayPackage = 'serenity-jbehave'
    projectDescription = 'Serenity JBehave integration'

    if (!project.hasProperty("bintrayUsername")) {
        bintrayUsername = 'wakaleo'
    }
    if (!project.hasProperty("bintrayApiKey")) {
        bintrayApiKey = ''
    }
    serenityCoreVersion = '1.0.13'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

test {
    include '**/When*'
    exclude '**/*$*'
    exclude '**/samples/**'
    exclude '**/*Sample*'
    maxParallelForks = 4
}

jar {
    manifest {
        attributes("Implementation-Title": "Serenity JBehave Plugin",
                   "Implementation-Version": project.version.toString())
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

dependencies {
    compile "net.serenity-bdd:core:${project.serenityCoreVersion}"

    compile 'org.jbehave:jbehave-core:3.9.3'
    compile 'de.codecentric:jbehave-junit-runner:1.1.0'
    compile 'org.reflections:reflections:0.9.8'
    compile 'com.googlecode.lambdaj:lambdaj:2.3.3'
    compile("org.codehaus.groovy:groovy-all:2.3.3")

    testCompile "ch.qos.logback:logback-classic:1.0.13"
    testCompile 'org.easytesting:fest-assert:1.4'
    testCompile "net.serenity-bdd:serenity-test-utils:${project.serenityCoreVersion}"
    testCompile "net.serenity-bdd:serenity-sample-alternative-resources:${project.serenityCoreVersion}"
    testCompile 'org.springframework:spring-test:3.1.2.RELEASE'
    testCompile 'org.springframework:spring-beans:3.1.2.RELEASE'
    testCompile 'org.springframework:spring-context:3.1.2.RELEASE'
    testCompile 'org.springframework:spring-context-support:3.1.2.RELEASE'
    testCompile "junit:junit:4.11"
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            logger.info "Publishing $project.name:$project.group:$project.version"

            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    description "Serenity JBehave integration"

                    url 'https://github.com/serenity-bdd/$project.name'
                    scm {
                        url 'scm:git:git@github.com:serenity-bdd/$project.name.git'
                        connection 'scm:git:git@github.com:serenity-bdd/$project.name.git'
                        developerConnection 'scm:git:git@github.com:serenity-bdd/$project.name.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id 'johnsmart'
                            name 'John Ferguson Smart'
                            email 'john.smart@wakaleo.com'
                        }
                    }
                }
                // Preserve compile-scope dependencies
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
}

bintray {
    user = bintrayUsername //this usually comes form gradle.properties file in ~/.gradle
    key = bintrayApiKey //this usually comes form gradle.properties file in ~/.gradle
    publications = ['mavenJava'] // see publications closure
    pkg {
        repo = 'maven'
        userOrg = 'serenity'
        name = 'serenity-jbehave'
        desc = 'Serenity JBehave plugin'
        websiteUrl = 'https://github.com/serenity-bdd/serenity-jbehave'
        issueTrackerUrl = 'https://github.com/serenity-bdd/serenity-jbehave/issues'
        licenses = ['Apache-2.0']
        labels = ['serenity','jbehave','bdd']
    }
}
